import uuid
from typing import Self

from django.db import models
from graph.models import Graph
from node.models import Node
from user.models import User


class NodeComment(models.Model):
    id = models.UUIDField(
        primary_key=True, unique=True, editable=False, default=uuid.uuid4
    )
    body = models.TextField()
    created_by = models.ForeignKey(User, on_delete=models.CASCADE)
    created_at = models.DateTimeField(auto_now_add=True)
    # which comment this comment is replying to
    parent = models.ForeignKey(
        "self", on_delete=models.CASCADE, blank=True, null=True, related_name="children"
    )
    # children is generated by parent
    children: models.Manager[Self]

    # which node this comment belongs to
    belongs_to = models.ForeignKey(Node, on_delete=models.CASCADE)


class GraphComment(models.Model):
    id = models.UUIDField(
        primary_key=True, unique=True, editable=False, default=uuid.uuid4
    )
    body = models.TextField()
    created_by = models.ForeignKey(User, on_delete=models.CASCADE)
    created_at = models.DateTimeField(auto_now_add=True)
    # which comment this comment is replying to
    parent = models.ForeignKey(
        "self", on_delete=models.CASCADE, blank=True, null=True, related_name="children"
    )
    # children is generated by parent
    children: models.Manager[Self]

    # which graph this comment belongs to
    belongs_to = models.ForeignKey(Graph, on_delete=models.CASCADE)
